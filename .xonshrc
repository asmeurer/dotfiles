# -*-mode: python; flycheck-mode: nil -*-

# Some useful functions to have in the namespace. Anything that needs to be
# imported for utility should be deleted or done inside a function so it
# doesn't clutter up the interactive namespace.

$PATH.insert(0, "/Users/aaronmeurer/anaconda/bin")

catimg
echo
fortune
echo

from pprint import pprint

##############
# The prompt #
##############

def cwd_dirname():
    from os.path import basename
    from os import getcwd
    try:
        cwd = getcwd()
    except FileNotFoundError:
        return "{BOLD_YELLOW}{BACKGROUND_BLACK}!!Current working directory not found!!{NO_COLOR}".format(**$FORMATTER_DICT)
    return basename(getcwd())

$FORMATTER_DICT['cwd_dirname'] = cwd_dirname

$GIT_PS1_SHOWDIRTYSTATE=1
$GIT_PS1_SHOWUNTRACKEDFILES=1
$GIT_PS1_SHOWUPSTREAM="auto"
$GIT_PS1_STATESEPARATOR=''

def git_prompt_bash():
    return $(bash -c 'source ~/Documents/git/contrib/completion/git-prompt.sh; __git_ps1 "%s"')

$FORMATTER_DICT['git_prompt_bash'] = git_prompt_bash

$FORMATTER_DICT['CONDA_DEFAULT_ENV'] = lambda: __xonsh_env__.get('CONDA_DEFAULT_ENV', '')

# Color tabs based on directories in iTerm 2

# Colors are done as "\033]6;1;bg;red;brightness;NNN\a\033]6;1;bg;blue;brightness;NNN\a\033]6;1;bg;green;brightness;NNN\a"
# Where you have                   ^              ^                ^              ^                  ^               ^
#                                  |              |                |              |                  |               |
#                                 red------->color value          blue------>color value           green------->color value
#                                              (0-255)                         (0-255)                            (0-255)

# The easiest way to get the color codes for a color is to just type the color
# name into WolframAlpha, and it will just tell you.  Or, if you have a
# particular color on-screen that you want, you can use DigitalColor Meter in
# /Applications/Utilities/

# XXX: Make sure the directory names end in /

# sympy - Red
DIR_SYMPY = '/Users/aaronmeurer/Documents/python/sympy/sympy/'
TAB_RED = "\033]6;1;bg;red;brightness;255\a\033]6;1;bg;blue;brightness;0\a\033]6;1;bg;green;brightness;0\a"

# sympy-scratch - Orange
DIR_SYMPY_SCRATCH = '/Users/aaronmeurer/Documents/python/sympy/sympy-scratch/'
TAB_ORANGE = "\033]6;1;bg;red;brightness;255\a\033]6;1;bg;blue;brightness;0\a\033]6;1;bg;green;brightness;128\a"

# sympy-bot - Purple
DIR_SYMPY_BOT = '/Users/aaronmeurer/Documents/python/sympy/sympy-bot/'
TAB_PURPLE = "\033]6;1;bg;red;brightness;255\a\033]6;1;bg;blue;brightness;255\a\033]6;1;bg;green;brightness;0\a"

# sympy other (like sympy-live or sympy.wiki) - Yellow
# Note, this one must be tested after the above ones
DIR_SYMPY_OTHER = '/Users/aaronmeurer/Documents/python/sympy/'
TAB_YELLOW = "\033]6;1;bg;red;brightness;255\a\033]6;1;bg;blue;brightness;0\a\033]6;1;bg;green;brightness;255\a"

# dotfiles - Green
DIR_DOTFILES = '/Users/aaronmeurer/Documents/dotfiles/'
TAB_GREEN = "\033]6;1;bg;red;brightness;0\a\033]6;1;bg;blue;brightness;0\a\033]6;1;bg;green;brightness;255\a"

# Continuum - Black
DIR_CONTINUUM = '/Users/aaronmeurer/Documents/Continuum/'
TAB_BLACK = "\033]6;1;bg;red;brightness;0\a\033]6;1;bg;blue;brightness;0\a\033]6;1;bg;green;brightness;0\a"

# Conda - White
DIR_CONDA = '/Users/aaronmeurer/Documents/Continuum/conda/'
TAB_WHITE = "\033]6;1;bg;red;brightness;255\a\033]6;1;bg;blue;brightness;255\a\033]6;1;bg;green;brightness;255\a"

# Conda - White
DIR_CONDA_BUILD = '/Users/aaronmeurer/Documents/Continuum/conda-build/'
TAB_TEAL = "\033]6;1;bg;red;brightness;0\a\033]6;1;bg;blue;brightness;128\a\033]6;1;bg;green;brightness;128\a"

# homework - Blue
DIR_HOMEWORK = "/Users/aaronmeurer/Documents/Homework/Grad/Fall 2013/"
TAB_BLUE = "\033]6;1;bg;red;brightness;0\a\033]6;1;bg;blue;brightness;255\a\033]6;1;bg;green;brightness;0\a"

# conda-recipes - Purple (defined above)
DIR_CONDA_RECIPES="/Users/aaronmeurer/Documents/Continuum/conda-recipes/"

# Other - default (gray)
# We can't clear the tab, so just match the color of the default tabs.
# (https://gitlab.com/gnachman/iterm2/issues/1904)

TAB_GRAY = "\033]6;1;bg;red;brightness;206\a\033]6;1;bg;blue;brightness;206\a\033]6;1;bg;green;brightness;206\a"

from collections import OrderedDict
DIR_TAB_COLOR = OrderedDict([
    (DIR_SYMPY, TAB_RED),
    (DIR_SYMPY_SCRATCH, TAB_ORANGE),
    (DIR_SYMPY_BOT, TAB_PURPLE),
    (DIR_SYMPY_OTHER, TAB_YELLOW),
    (DIR_DOTFILES, TAB_GREEN),
    (DIR_HOMEWORK, TAB_BLUE),
    (DIR_CONDA, TAB_WHITE),
    (DIR_CONDA_BUILD, TAB_TEAL),
    (DIR_CONDA_RECIPES, TAB_PURPLE),
    (DIR_CONTINUUM, TAB_BLACK),
])
del OrderedDict

def set_tab_color():
    # To make this work correctly with subdirectories, put higher level
    # directories later in the list. Hence, we use an OrderedDict
    from os import getcwd
    import sys

    try:
        cwd = getcwd()
    except FileNotFoundError:
        return ''
    for dir, color in DIR_TAB_COLOR.items():
        if (cwd + '/').startswith(dir):
            sys.stdout.write(color)
            break
    else:
        sys.stdout.write(TAB_GRAY)
    # Clear cruft from the tab title (http://www.faqs.org/docs/Linux-mini/Xterm-Title.html#s3)
    sys.stdout.write("\033]0;\007")
    return ''

$FORMATTER_DICT['set_tab_color'] = set_tab_color

def print_carriage_return():
    import sys
    sys.stdout.write('\r')
    return ''

$FORMATTER_DICT['carriage_return'] = print_carriage_return


def iterm2_shell_integration_prompt_command():
    return $(bash -c 'source /Users/aaronmeurer/.iterm2_shell_integration.bash; preexec_invoke_cmd')

$FORMATTER_DICT['iterm2_shell_integration_prompt_command'] = iterm2_shell_integration_prompt_command

$PROMPT = '{carriage_return}{CONDA_DEFAULT_ENV}{BOLD_WHITE}{BACKGROUND_BLACK}{cwd_dirname}{NO_COLOR}{BOLD_CYAN}{git_prompt_bash}{NO_COLOR}{BACKGROUND_RED}üêö {NO_COLOR}{set_tab_color}'

###########
# Aliases #
###########

aliases['rm'] = 'rm -i'
aliases['cp'] = 'cp -i'
aliases['mv'] = 'mv -i'
def ssh(args, stdin=None):
    $TERM = 'xterm-256color'
    ssh @(args) < @(stdin)

aliases['ssh'] = ssh
del ssh

def vagrant(args, stdin=None):
    $TERM = 'xterm-256color'
    vagrant @(args) < @(stdin)

aliases['vagrant'] = vagrant
del vagrant

aliases['ls'] = 'ls -AG@Flha'
aliases[' l'] = 'ls -AG@Flha'
aliases['grep'] = 'grep -i --color=always'
aliases['mkdir'] = 'mkdir -p'
aliases['cdsympy'] = 'cd ~/Documents/python/sympy/sympy'
aliases['cds'] = 'cd ~/Documents/python/sympy/sympy'
aliases['cdss'] = 'cd ~/Documents/python/sympy/sympy-scratch'
aliases['cdsss'] = 'cd ~/Documents/python/sympy/sympy-scratch2'
$EMACSCLIENT = "emacsclient -a 'emacs-server-start' -nw --socket-name=$TTY"
aliases['emacsclient'] = $EMACSCLIENT
aliases['e'] = $EMACSCLIENT
aliases['rehash'] = 'hash -r'
# aliases['cdpwd'] = 'cd `pwd`'

def free(args, stdin=None):
    disk_info = $(diskutil info /)
    return [i for i in disk_info.splitlines() if "Free" in i][0] + '\n'

aliases['free'] = free
del free


# Typos
aliases['it'] = 'git'
aliases['gi'] = 'git'
aliases['tit'] = 'git'
aliases['sl'] = 'ls'

def cdd(args, stdin=None):
    cd @("/Users/aaronmeurer/Documents/" + ''.join(args))

aliases['cdd'] = cdd
del cdd

def cdc(args, stdin=None):
    cd @("/Users/aaronmeurer/Documents/Continuum/" + ''.join(args))

aliases['cdc'] = cdc
del cdc

source-bash ~/Documents/git/contrib/completion/git-completion.bash
source-bash ~/Documents/git/contrib/completion/git-prompt.sh

# $SHELL_TYPE = 'prompt_toolkit'
